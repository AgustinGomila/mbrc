apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "com.kelsos.mbrc"
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 92
        versionName "0.9.10"
    }

    signingConfigs {
        release {
            storeFile file('placeholder')
            keyAlias "placeholder"
            storePassword "placeholder"
            keyPassword "placeholder"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".s"
            versionNameSuffix ".s"
        }
    }

     compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        abortOnError false
        xmlReport true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

dependencies {
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile 'com.android.support:support-v4:21.0.0'
    compile 'org.roboguice:roboguice:3.0.1'
    compile 'com.squareup:otto:1.3.5'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'com.github.mrengineer13:snackbar:0.4.0'
    compile 'com.viewpagerindicator:library:2.4.1@aar'
    compile 'com.mobeta.android.dslv:drag-sort-listview:0.6.1@aar'
    compile 'com.github.machinarius:preferencefragment:0.1.1'
    provided 'org.roboguice:roboblender:3.0.1'
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('signing.properties')
        def configName = 'release'
        if (propsFile.exists()) {
            def prop = new Properties()
            prop.load(new FileInputStream(propsFile))
            def filepath = prop['keys']
            def keyPropFile = file(filepath)
            if (keyPropFile.exists() && android.signingConfigs.hasProperty(configName)) {
                def props = new Properties()
                props.load(new FileInputStream(keyPropFile))
                def keystorePath = props['keystore']
                android.signingConfigs[configName].storeFile = file(keystorePath)
                android.signingConfigs[configName].storePassword = props['storePass']
                android.signingConfigs[configName].keyAlias = props['keyAlias']
                android.signingConfigs[configName].keyPassword = props['keyPass']
            }
        }
    }
}

project.tasks.withType(JavaCompile) { task ->
    options.compilerArgs << "-AguiceAnnotationDatabasePackageName=mbrc"
}
